# -------------------------------
# 1. Namespaces
# -------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: chessmasters-web
---
apiVersion: v1
kind: Namespace
metadata:
  name: chessmasters-websocket
---
apiVersion: v1
kind: Namespace
metadata:
  name: chessmasters-engine

# -------------------------------
# 2. Web App Deployment & Service
# -------------------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chessmasters-web
  namespace: chessmasters-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chessmasters-web
  template:
    metadata:
      labels:
        app: chessmasters-web
    spec:
      containers:
        - name: chessmasters-web
          image: kushalbhana/chessmasters-web
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: chessmasters-common-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: chessmasters-web
  namespace: chessmasters-web
spec:
  selector:
    app: chessmasters-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP

# -------------------------------
# 3. WebSocket Server Deployment & Service
# -------------------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chessmasters-websocket
  namespace: chessmasters-websocket
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chessmasters-websocket
  template:
    metadata:
      labels:
        app: chessmasters-websocket
    spec:
      containers:
        - name: chessmasters-websocket
          image: kushalbhana/chessmasters-websocket
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: chessmasters-common-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: chessmasters-websocket
  namespace: chessmasters-websocket
spec:
  selector:
    app: chessmasters-websocket
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

# -------------------------------
# 4. Chess Engine Deployment & Service
# -------------------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chessmasters-engine
  namespace: chessmasters-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chessmasters-engine
  template:
    metadata:
      labels:
        app: chessmasters-engine
    spec:
      containers:
        - name: chessmasters-engine
          image: kushalbhana/chessmasters-engine
          ports:
            - containerPort: 4000
          envFrom:
            - secretRef:
                name: chessmasters-common-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: chessmasters-engine
  namespace: chessmasters-engine
spec:
  selector:
    app: chessmasters-engine
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000
  type: ClusterIP

# -------------------------------
# 5. ExternalName Services in Ingress Namespace
# -------------------------------
---
apiVersion: v1
kind: Service
metadata:
  name: chessmasters-websocket-proxy
  namespace: chessmasters-web
spec:
  type: ExternalName
  externalName: chessmasters-websocket.chessmasters-websocket.svc.cluster.local
  ports:
    - port: 80
      targetPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: chessmasters-engine-proxy
  namespace: chessmasters-web
spec:
  type: ExternalName
  externalName: chessmasters-engine.chessmasters-engine.svc.cluster.local
  ports:
    - port: 80
      targetPort: 80

# -------------------------------
# 6. Ingress with Path Rewrite
# -------------------------------
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chessmasters-ingress
  namespace: chessmasters-web
  annotations:
    kubernetes.io/ingress.class: "nginx"
    acme.cert-manager.io/http01-edit-in-place: "true"

    # Enable cert-manager
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - chessmasters.kushalbhana.dev
      secretName: chessmasters-tls
  rules:
    - host: chessmasters.kushalbhana.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chessmasters-web
                port:
                  number: 80
          - path: /websocket
            pathType: Prefix
            backend:
              service:
                name: chessmasters-websocket-proxy
                port:
                  number: 80
          - path: /engine
            pathType: Prefix
            backend:
              service:
                name: chessmasters-engine-proxy
                port:
                  number: 80

